import { CONFIG, getApiUrl } from './config.js';

export class GewurzWidget {
  constructor(options = {}) {
    // –û–±'—î–¥–Ω—É—î–º–æ –¥–µ—Ñ–æ–ª—Ç–Ω–∏–π –∫–æ–Ω—Ñ—ñ–≥ –∑ –ø–µ—Ä–µ–¥–∞–Ω–∏–º–∏ –æ–ø—Ü—ñ—è–º–∏
    this.config = this.mergeConfig(CONFIG, options);
    
    // –°—Ç–∞–Ω –≤—ñ–¥–∂–µ—Ç–∞
    this.isOpen = false;
    this.isLoaded = false;
    this.elements = {};
    
    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
    this.init();
  }
  
  // –û–±'—î–¥–Ω–∞–Ω–Ω—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ–π
  mergeConfig(defaultConfig, userConfig) {
    const merged = JSON.parse(JSON.stringify(defaultConfig)); // Deep clone
    
    // –ü—Ä–æ—Å—Ç–∏–π merge –¥–ª—è –ø–µ—Ä—à–æ–≥–æ —Ä—ñ–≤–Ω—è
    Object.keys(userConfig).forEach(key => {
      if (typeof userConfig[key] === 'object' && !Array.isArray(userConfig[key])) {
        merged[key] = { ...merged[key], ...userConfig[key] };
      } else {
        merged[key] = userConfig[key];
      }
    });
    
    return merged;
  }
  
  // –ì–æ–ª–æ–≤–Ω–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
  init() {
    this.checkDependencies();
    this.createWidget();
    this.bindEvents();
    this.applyCustomPositioning();
    
    // –í—ñ–¥–∫–ª–∞–¥–µ–Ω–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å–ø–æ–≤—ñ—â–µ–Ω—å
    if (this.config.behavior.showNotificationAfter > 0) {
      this.scheduleNotification();
    }
  }
  
  // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —â–æ –≤—ñ–¥–∂–µ—Ç –Ω–µ –¥—É–±–ª—é—î—Ç—å—Å—è
  checkDependencies() {
    if (window.GewurzChatLoaded) {
      console.warn('Gew√ºrz Chat Widget already loaded');
      return false;
    }
    window.GewurzChatLoaded = true;
    return true;
  }
  
  // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è HTML —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –≤—ñ–¥–∂–µ—Ç–∞
  createWidget() {
    // –°—Ç–≤–æ—Ä–∏—Ç–∏ –æ—Å–Ω–æ–≤–Ω–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    const container = document.createElement('div');
    container.className = 'gwz-widget';
    container.setAttribute('data-gwz-widget', 'true');
    
    // HTML —Å—Ç—Ä—É–∫—Ç—É—Ä–∞
    container.innerHTML = `
      <button class="gwz-widget__button" title="${this.config.texts.buttonTitle}">
        <img 
          src="${this.config.ui.iconUrl}" 
          alt="Gew√ºrz Guru"
          onerror="this.style.display='none'; this.parentElement.innerHTML='üí¨';">
        <div class="gwz-widget__notification"></div>
      </button>
      
      <div class="gwz-widget__modal">
        <div class="gwz-widget__header">
          <button class="gwz-widget__close" title="Schlie√üen">‚úï</button>
        </div>
        <iframe 
          class="gwz-widget__iframe" 
          sandbox="allow-scripts allow-same-origin allow-forms allow-popups allow-top-navigation"
          loading="lazy">
        </iframe>
        <div class="gwz-widget__spinner" style="display: none;">
          <div class="gwz-widget__spinner-icon"></div>
        </div>
      </div>
    `;
    
    // –î–æ–¥–∞—Ç–∏ –¥–æ DOM
    document.body.appendChild(container);
    
    // –ó–±–µ—Ä–µ–≥—Ç–∏ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –µ–ª–µ–º–µ–Ω—Ç–∏
    this.elements = {
      container,
      button: container.querySelector('.gwz-widget__button'),
      modal: container.querySelector('.gwz-widget__modal'),
      close: container.querySelector('.gwz-widget__close'),
      iframe: container.querySelector('.gwz-widget__iframe'),
      notification: container.querySelector('.gwz-widget__notification'),
      spinner: container.querySelector('.gwz-widget__spinner')
    };
  }
  
  // –ü—Ä–∏–≤'—è–∑–∫–∞ –ø–æ–¥—ñ–π
  bindEvents() {
    // –í—ñ–¥–∫—Ä–∏—Ç–∏/–∑–∞–∫—Ä–∏—Ç–∏ –ø–æ –∫–ª—ñ–∫—É –Ω–∞ –∫–Ω–æ–ø–∫—É
    this.elements.button.addEventListener('click', (e) => {
      e.preventDefault();
      this.toggle();
    });
    
    // –ó–∞–∫—Ä–∏—Ç–∏ –ø–æ –∫–ª—ñ–∫—É –Ω–∞ —Ö—Ä–µ—Å—Ç–∏–∫
    this.elements.close.addEventListener('click', (e) => {
      e.preventDefault();
      this.close();
    });
    
    // –ó–∞–∫—Ä–∏—Ç–∏ –ø–æ –∫–ª—ñ–∫—É –ø–æ–∑–∞ –º–æ–¥–∞–ª—å–Ω–∏–º –≤—ñ–∫–Ω–æ–º (—Ç—ñ–ª—å–∫–∏ –Ω–∞ –¥–µ—Å–∫—Ç–æ–ø—ñ)
    if (this.config.behavior.closeOnClickOutside) {
      document.addEventListener('click', (e) => {
        if (window.innerWidth > 768 && 
            this.isOpen && 
            !this.elements.modal.contains(e.target) && 
            !this.elements.button.contains(e.target)) {
          this.close();
        }
      });
    }
    
    // –ó–∞–∫—Ä–∏—Ç–∏ –ø–æ Escape
    if (this.config.behavior.closeOnEscape) {
      document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape' && this.isOpen) {
          this.close();
        }
      });
    }
    
    // –°–ª—É—Ö–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ iframe
    window.addEventListener('message', (event) => {
      this.handleIframeMessage(event);
    });
  }
  
  // –ó–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏ –∫–∞—Å—Ç–æ–º–Ω–µ –ø–æ–∑–∏—Ü—ñ—é–≤–∞–Ω–Ω—è
  applyCustomPositioning() {
    const { desktop, mobile } = this.config.ui;
    
    // –ó–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏ –ø–æ–∑–∏—Ü—ñ—ó —á–µ—Ä–µ–∑ CSS custom properties
    const container = this.elements.container;
    
    // –î–µ—Å–∫—Ç–æ–ø –ø–æ–∑–∏—Ü—ñ—ó
    Object.entries(desktop.button).forEach(([prop, value]) => {
      container.style.setProperty(`--desktop-button-${prop}`, value);
    });
    
    Object.entries(desktop.chat).forEach(([prop, value]) => {
      container.style.setProperty(`--desktop-chat-${prop}`, value);
    });
    
    // –ú–æ–±—ñ–ª—å–Ω—ñ –ø–æ–∑–∏—Ü—ñ—ó
    Object.entries(mobile.button).forEach(([prop, value]) => {
      container.style.setProperty(`--mobile-button-${prop}`, value);
    });
    
    Object.entries(mobile.chat).forEach(([prop, value]) => {
      container.style.setProperty(`--mobile-chat-${prop}`, value);
    });
  }
  
  // –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç–∏ —Å—Ç–∞–Ω (–≤—ñ–¥–∫—Ä–∏—Ç–∏/–∑–∞–∫—Ä–∏—Ç–∏)
  toggle() {
    if (this.isOpen) {
      this.close();
    } else {
      this.open();
    }
  }
  
  // –í—ñ–¥–∫—Ä–∏—Ç–∏ —á–∞—Ç
  open() {
    if (this.isOpen) return;
    
    this.isOpen = true;
    this.elements.modal.classList.add('gwz-widget__modal--open');
    this.elements.button.classList.add('gwz-widget__button--hidden');
    
    // –ü—Ä–∏—Ö–æ–≤–∞—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
    this.hideNotification();
    
    // –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —á–∞—Ç —è–∫—â–æ —â–µ –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏–π
    if (!this.isLoaded) {
      this.loadChat();
    }
    
    // Trigger custom event
    this.dispatchEvent('gewurz:chat:opened');
  }
  
  // –ó–∞–∫—Ä–∏—Ç–∏ —á–∞—Ç
  close() {
    if (!this.isOpen) return;
    
    this.isOpen = false;
    this.elements.modal.classList.remove('gwz-widget__modal--open');
    this.elements.button.classList.remove('gwz-widget__button--hidden');
    
    // Trigger custom event
    this.dispatchEvent('gewurz:chat:closed');
  }
  
  // –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —á–∞—Ç –≤ iframe
  loadChat() {
    this.showSpinner();
    
    // –ü—ñ–¥–≥–æ—Ç—É–≤–∞—Ç–∏ –∫–æ–Ω—Ñ—ñ–≥ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á—ñ –≤ —á–∞—Ç
    const chatConfig = {
      api: this.config.api,
      texts: this.config.texts
    };
    
    // –°—Ç–≤–æ—Ä–∏—Ç–∏ URL –∑ –∫–æ–Ω—Ñ—ñ–≥–æ–º
    const configParam = encodeURIComponent(JSON.stringify(chatConfig));
    const chatUrl = `${this.config.ui.chatUrl}?config=${configParam}`;
    
    // –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏
    this.elements.iframe.src = chatUrl;
    
    // Fallback –¥–ª—è –ø—Ä–∏—Ö–æ–≤–∞–Ω–Ω—è —Å–ø—ñ–Ω–µ—Ä–∞
    setTimeout(() => {
      this.hideSpinner();
    }, 5000);
    
    this.isLoaded = true;
  }
  
  // –ü–æ–∫–∞–∑–∞—Ç–∏ —Å–ø—ñ–Ω–µ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
  showSpinner() {
    this.elements.spinner.style.display = 'flex';
  }
  
  // –ü—Ä–∏—Ö–æ–≤–∞—Ç–∏ —Å–ø—ñ–Ω–µ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
  hideSpinner() {
    this.elements.spinner.style.display = 'none';
  }
  
  // –û–±—Ä–æ–±–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –∑ iframe
  handleIframeMessage(event) {
    // –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –¥–æ–º–µ–Ω –¥–ª—è –±–µ–∑–ø–µ–∫–∏
    // if (!event.origin.includes('gewurzguru.com')) return;
    
    const { type, data } = event.data;
    
    switch (type) {
      case 'chat-loaded':
        this.hideSpinner();
        this.dispatchEvent('gewurz:chat:ready');
        break;
        
      case 'chat-message-sent':
        this.dispatchEvent('gewurz:message:sent', data);
        break;
        
      case 'chat-message-received':
        this.dispatchEvent('gewurz:message:received', data);
        break;
        
      default:
        // –ù–µ–≤—ñ–¥–æ–º–∏–π —Ç–∏–ø –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        break;
    }
  }
  
  // –ü–æ–∫–∞–∑–∞—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
  showNotification() {
    this.elements.notification.classList.add('gwz-widget__notification--show');
    this.elements.button.classList.add('gwz-widget__button--pulse');
    
    // –ü—Ä–∏–±—Ä–∞—Ç–∏ –∞–Ω—ñ–º–∞—Ü—ñ—é –ø—É–ª—å—Å–∞—Ü—ñ—ó —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥–∏
    setTimeout(() => {
      this.elements.button.classList.remove('gwz-widget__button--pulse');
    }, 3000);
  }
  
  // –ü—Ä–∏—Ö–æ–≤–∞—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
  hideNotification() {
    this.elements.notification.classList.remove('gwz-widget__notification--show');
    this.elements.button.classList.remove('gwz-widget__button--pulse');
  }
  
  // –ó–∞–ø–ª–∞–Ω—É–≤–∞—Ç–∏ –ø–æ–∫–∞–∑ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
  scheduleNotification() {
    setTimeout(() => {
      if (!this.isOpen) {
        this.showNotification();
      }
    }, this.config.behavior.showNotificationAfter);
  }
  
  // –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –∫–∞—Å—Ç–æ–º–Ω—É –ø–æ–¥—ñ—é
  dispatchEvent(eventName, detail = null) {
    const event = new CustomEvent(eventName, { 
      detail: { widget: this, data: detail } 
    });
    window.dispatchEvent(event);
  }
  
  // –ü—É–±–ª—ñ—á–Ω—ñ –º–µ—Ç–æ–¥–∏ –¥–ª—è API
  destroy() {
    if (this.elements.container) {
      this.elements.container.remove();
    }
    window.GewurzChatLoaded = false;
  }
  
  updateConfig(newConfig) {
    this.config = this.mergeConfig(this.config, newConfig);
    this.applyCustomPositioning();
  }
}
